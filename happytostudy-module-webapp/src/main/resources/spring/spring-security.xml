<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!--
		SPRING SECURITY SETUP
	-->

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
        <constructor-arg value="ThisIsASecretSoChangeMe" />
    </bean>

    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http
            realm="Protected API"
            use-expressions="true"
            auto-config="false"
            create-session="stateless"
            entry-point-ref="unauthorizedEntryPoint"
            authentication-manager-ref="authenticationManager">
        <security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
        <security:intercept-url pattern="/rest/user/authenticate" access="permitAll" />
        <security:intercept-url method="GET" pattern="/rest/news/**" access="hasRole('user')" />
        <security:intercept-url method="GET" pattern="/protected/**" access="hasRole('user')" />
        <security:intercept-url method="PUT" pattern="/rest/news/**" access="hasRole('admin')" />
        <security:intercept-url method="POST" pattern="/rest/news/**" access="hasRole('admin')" />
        <security:intercept-url method="DELETE" pattern="/rest/news/**" access="hasRole('admin')" />
    </security:http>

    <bean id="unauthorizedEntryPoint" class="com.huyvn.happytostudy.authentication.UnauthorizedEntryPoint" />

    <bean class="com.huyvn.happytostudy.authentication.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
        <constructor-arg ref="userService" />
    </bean>




    <!--<security:global-method-security secured-annotations="enabled" />-->

    <!--<security:http auto-config="true" use-expressions="true" access-denied-page="/login?error=403">-->

        <!--<security:intercept-url pattern="/" access="permitAll" />-->
        <!--<security:intercept-url pattern="/protected/**" access="isAuthenticated()" />-->

        <!--&lt;!&ndash;<security:form-login login-page="/login" authentication-failure-url="/login?error=403" default-target-url="/protected/home" />&ndash;&gt;-->
        <!--<security:form-login login-page="/login" authentication-failure-url="/login?error=403" default-target-url="/" />-->

        <!--<security:logout invalidate-session="true" logout-success-url="/login" logout-url="/logout" />-->
    <!--</security:http>-->

    <!--<security:authentication-manager>-->
        <!--&lt;!&ndash;<security:authentication-provider>&ndash;&gt;-->
            <!--&lt;!&ndash;<security:jdbc-user-service&ndash;&gt;-->
                    <!--&lt;!&ndash;data-source-ref="myContactDataSource"&ndash;&gt;-->
                    <!--&lt;!&ndash;users-by-username-query="select email, password, enabled from user where email = ?"&ndash;&gt;-->
                    <!--&lt;!&ndash;authorities-by-username-query="select u.email as login, u.user_role as role from user u where u.email = ?" />&ndash;&gt;-->
        <!--&lt;!&ndash;</security:authentication-provider>&ndash;&gt;-->

        <!--<security:authentication-provider user-service-ref="loginService">-->
            <!--<security:password-encoder hash="sha" />-->
        <!--</security:authentication-provider>-->

    <!--</security:authentication-manager>-->
</beans>